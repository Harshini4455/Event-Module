<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('../partials/head') %>
  <title>Media Manager</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/dropzone.min.css">
  <style>
    .media-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      gap: 15px;
      margin-top: 20px;
    }
    .media-item {
      position: relative;
      border: 1px solid #ddd;
      padding: 10px;
      border-radius: 5px;
    }
    .media-item img, .media-item video {
      width: 100%;
      height: auto;
      max-height: 150px;
      object-fit: cover;
    }
    .media-controls {
      position: absolute;
      top: 5px;
      right: 5px;
    }
    .media-position {
      margin-top: 5px;
    }
  </style>
</head>
<body>
  <%- include('../partials/admin-header') %>
  
  <div class="container mt-4">
    <h2>Manage Event Media</h2>
    
    <form action="/admin/events/<%= event._id %>/media" 
          class="dropzone" 
          id="mediaUploadForm">
      <div class="dz-message">
        Drop files here or click to upload<br>
        <span class="text-muted">(Up to 30 images/videos, 50MB each)</span>
      </div>
    </form>

    <div class="media-grid" id="mediaGrid">
      <% event.media.sort((a,b) => a.position - b.position).forEach((item, index) => { %>
        <div class="media-item" data-media-id="<%= item._id %>">
          <div class="media-controls">
            <button class="btn btn-sm btn-danger delete-media">Ã—</button>
          </div>
          <% if (item.type === 'image') { %>
            <img src="<%= item.url %>" alt="Event Image">
          <% } else { %>
            <video controls>
              <source src="<%= item.url %>">
            </video>
          <% } %>
          <div class="media-position mt-2">
            <input type="number" class="form-control form-control-sm position-input" 
                   value="<%= item.position %>" min="0">
          </div>
          <textarea class="form-control form-control-sm mt-2 caption-input" 
                    placeholder="Caption"><%= item.caption || '' %></textarea>
        </div>
      <% }); %>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/dropzone.min.js"></script>
  <script>
    // Initialize Dropzone
    Dropzone.autoDiscover = false;
    const myDropzone = new Dropzone("#mediaUploadForm", {
      paramName: "media",
      maxFiles: 30,
      acceptedFiles: "image/*,video/*",
      addRemoveLinks: false,
      init: function() {
        this.on("success", function(file, response) {
          location.reload();
        });
      }
    });

    // Handle media updates
    document.querySelectorAll('.position-input, .caption-input').forEach(input => {
      input.addEventListener('change', async function() {
        const mediaItem = this.closest('.media-item');
        const mediaId = mediaItem.dataset.mediaId;
        const eventId = '<%= event._id %>';
        
        const data = {
          position: mediaItem.querySelector('.position-input').value,
          caption: mediaItem.querySelector('.caption-input').value
        };

        try {
          const response = await fetch(`/admin/events/${eventId}/media/${mediaId}`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });
          const result = await response.json();
          if (response.ok) {
            location.reload(); // Refresh to show new order
          } else {
            alert(result.error || 'Failed to update media');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Failed to update media');
        }
      });
    });

    // Handle media deletion
    document.querySelectorAll('.delete-media').forEach(button => {
      button.addEventListener('click', async function() {
        if (!confirm('Are you sure you want to delete this media?')) return;
        
        const mediaItem = this.closest('.media-item');
        const mediaId = mediaItem.dataset.mediaId;
        const eventId = '<%= event._id %>';

        try {
          const response = await fetch(`/admin/events/${eventId}/media/${mediaId}`, {
            method: 'DELETE'
          });
          const result = await response.json();
          if (response.ok) {
            mediaItem.remove();
          } else {
            alert(result.error || 'Failed to delete media');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Failed to delete media');
        }
      });
    });
  </script>
</body>
</html>